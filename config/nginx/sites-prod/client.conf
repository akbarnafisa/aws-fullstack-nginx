map $sent_http_content_type $expires {
    "text/html"                 epoch;
    "text/html; charset=utf-8"  epoch;
    default                     off;
}

# 1 - init certbot create .pem file
server {
    listen 80 default_server;
    server_name _;

    location ~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    #2 - after adding the .pem file, 
    # return 301 https://$host$request_uri;
}

# 2 - after adding the .pem file, enable this config to redirect to https
# server {
#     listen 443 ssl;
#     server_name {api};

#     ssl_certificate     /etc/letsencrypt/live/{api}/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/{api}/privkey.pem;

#     charset utf-8;
#     client_max_body_size        100M;

#     gzip            on;
#     gzip_types      text/plain application/xml text/css application/javascript;
#     gzip_min_length 1000;

#     # path to the root of the project
#     location /todo-app/ {
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header Host $host;

#         # make sure to use the same image name as the one in the docker-compose file
#         proxy_pass http://my-project-prod-server:3000/;

#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#     }

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     access_log off;
# }